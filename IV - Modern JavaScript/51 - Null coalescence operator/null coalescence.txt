É um operador lógico que retorna o seu operando do lado direito quando o seu operador do lado esquerdo é null ou undefined. Caso contrário, ele retorna o seu operando do lado esquerdo.

Utiliza dois pontos de interrogação: '??'

Vale destacar que ele é diferente do operador lógico OU ('||'), que dá curto-circuito em expressões 'falsy' (por exemplo, o número 0)

Pode ser usado para operações lógicas e também para atribuições de valores padrão através de short-circuit evaluation (avaliação de curto-circuito)

Exemplo:
let a = 0

let c = a || 42   //c será 42
c = a ?? 42       //c será 0, pois 0 é falsy, mas não nullish
c = null ?? 42    //c será 42

Isso acontece pois se usarmos um operador lógico no javascript passando valores, ele então avaliará esse valor e irá tentar interpretar esses valores como booleanos. 

Nessas expressões, se o valor do parâmetro for falso, o JS irá ignorá-lo, e irá retornar o primeiro valor verdadeiro que encontrar.

No operador de coalescência nula, trabalha de forma parecida, mas ele considera valores não-nulos. Ele irá ignorar valores como 'null' e 'undefined' (tratará como falso) e qualquer outro valor, como 0, ele será considerado como verdadeiro