Imagine a seguinte página de Login:
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Enviando Valores do DOM para o Javascript</title>
  <script src="./index.js"></script>
</head>
<body>
  <h1>Enviando Valores do DOM para o Javascript</h1>
  <hr>

  <h2>Registre-se!</h2>
  <section>
    <label for="username">Nome de Usuário:</label>
    <input type="text" name="username" id="username">
    <br>
    <label for="password">Senha:</label>
    <input type="password" name="password" id="password">
    <br>
    <label for="passwordConfirmation">Confirme sua senha:</label>
    <input type="password" name="passwordConfirmation" id="passwordConfirmation">
    <br>
    <button onclick="register(this.parentNode)">Registrar</button>
  </section>
</body>
</html> 

JAVASCRIPT
function register(element) {
  const username = element.children.username.value
  const password = element.children.password.value
  const passwordConfirmation = element.children.passwordConfirmation.value

  if (password === passwordConfirmation) {
    alert("Usuário " + username + " registrado!")
  } else {
    alert("As senhas não conferem")
  }
}

O this.parentNode envia todo o pai do elemento em questão, o pai do button é a section. Com isso, na function Register, já no JS, podemos buscar os dados desejados a partir da id de cada campo, uma vez que toda a section será enviada.